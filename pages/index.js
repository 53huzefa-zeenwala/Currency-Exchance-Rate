import Head from "next/head";
import { useState, useEffect } from "react";
import Header from "../components/Header";
import LatestCurrencies from "../components/LatestCurrencies";
import SelectOption from "../components/SelectOption";

export default function Home(props) {
  const [convertCurrency, setconvertCurrency] = useState(1);
  const [covertData, setcovertData] = useState([]);
  const [fromAmount, setFromAmount] = useState(1);
  const [fromCurrency, setFromCurrency] = useState("USD");
  const [toAmount, setToAmount] = useState(1);
  const [toCurrency, setToCurrency] = useState("INR");

  const [toPlaceholder, settoPlaceholder] = useState();
  const [fromPlaceholder, setfromPlaceholder] = useState();

  useEffect(() => {
    const host = "api.frankfurter.app";
    const fetchApi = async () => {
      fetch(
        `https://${host}/latest?{amount=1&from=${fromCurrency}&to=${toCurrency}`
      )
        .then((resp) => resp.json())
        .then((data) => {
          setcovertData(data);
          setconvertCurrency(Object.values(data.rates)[0]);
          setToAmount(Object.values(data.rates)[0]);
        });
    };
    fetchApi();
  }, [toCurrency, fromCurrency]);

  useEffect(() => {
    setToAmount("");
    settoPlaceholder(convertCurrency * fromAmount);
  }, [fromAmount]);

  useEffect(() => {
    setFromAmount("");
    setfromPlaceholder(toAmount / convertCurrency);
  }, [toAmount]);

  return (
    <div className="p-6">
      <Head>
        <title>
          Currencies Tracker , Latest Change , UP And DOWN In Currencies
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/download.png" />
      </Head>

      <Header heading="Check Out The Latest Currency Rate And Exchanges Rate Of Currency" />

      <h1 className="text-2xl sm:text-3xl my-4 font-extrabold md:text-4xl m-0 sm:my-6 lg:ml-52 lg:my-8 ">
        {covertData.rates ? convertCurrency : "0.001"} <span> </span>
        {covertData.rates ? Object.keys(covertData.rates)[0] : " INR"}
      </h1>

      {/* from this input from */}
      <div className="flex flex-row items-center gap-8 md:gap-24 my-3 lg:ml-52">
        <input
          className="border-2 border-gray-600 px-2 text-xl py-1 w-36 sm:w-52 md:w-60 lg:w-72 font-semibold m-full md:text-2xl rounded-md"
          type="number"
          placeholder={fromPlaceholder}
          onChange={(e) => setFromAmount(e.target.value)}
          value={fromAmount}
          maxLength="10"
        />

        <SelectOption
          Currency={(c) => setFromCurrency(c)}
          contries={props.contries}
          value={fromCurrency}
        />
      </div>

      {/* from this to running  */}
      <div className="flex flex-row items-center gap-8 md:gap-24 my-3 lg:ml-52">
        <input
          className="border-2 border-gray-600 px-2 text-xl py-1 font-semibold m-full md:text-2xl rounded-md w-36 sm:w-52 md:w-60 lg:w-72"
          type="number"
          onChange={(e) => setToAmount(e.target.value)}
          value={toAmount}
          placeholder={toPlaceholder}
        />

        <SelectOption
          Currency={(c) => setToCurrency(c)}
          contries={props.contries}
          value={toCurrency}
        />
      </div>

      <LatestCurrencies
        currencies={props.currencies}
        contries={props.contries}
      />
    </div>
  );
}

export async function getServerSideProps(context) {
  let [dataCurrencies, dataContries] = await Promise.all([
    fetch("https://api.frankfurter.app/latest?from=INR"),
    fetch("https://api.frankfurter.app/currencies"),
  ]);
  let [currencies, contries] = await Promise.all([
    dataCurrencies.json(),
    dataContries.json(),
  ]);

  return {
    props: { currencies, contries },
  };
}
